(defn give
  "Give an item (key, detector or animal) to another player in the same room."
  [thing recipient]
  (dosync
   (let [thing-key (keyword thing)
         valid-items #{:key :detector :bunny :turtle}]
     (cond
       (not (player/carrying? thing))
       (str "You're not carrying a " thing ".")
       
       (not (contains? valid-items thing-key))
       (str "You can't give " thing ". You can only give keys, detector or animals.")
       
       (not (contains? @(:inhabitants @player/*current-room*) recipient))
       (str recipient " is not in this room.")
       
       :else
       (let [recipient-inventory (player/get-inventory recipient)]
         (move-between-refs thing-key
                           player/*inventory*
                           recipient-inventory)
         (binding [*out* (player/streams recipient)]
           (println (str player/*name* " gave you " thing "."))
           (println player/prompt))
         (str "You gave " thing " to " recipient "."))))))
